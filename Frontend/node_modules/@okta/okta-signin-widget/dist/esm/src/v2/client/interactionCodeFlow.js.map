{"version":3,"file":"interactionCodeFlow.js","sources":["../../../../../src/v2/client/interactionCodeFlow.js"],"sourcesContent":["/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport Enums from 'util/Enums';\nimport Errors from 'util/Errors';\nimport { toQueryString } from '@okta/okta-auth-js';\n\n// eslint-disable-next-line max-statements\nexport async function interactionCodeFlow(settings, idxResponse) {\n  const { interactionCode } = idxResponse;\n  const authClient = settings.getAuthClient();\n  const transactionMeta = await authClient.idx.getSavedTransactionMeta();\n  const state = authClient.options.state || transactionMeta?.state;\n\n  // In remediation mode the transaction is owned by another client.\n  const isRemediationMode = settings.get('mode') === 'remediation';\n  if (isRemediationMode) {\n    authClient.idx.clearTransactionMeta();\n  }\n  \n  // server-side applications will want to received interaction_code as a query parameter\n  // this option can also be used to force a redirect for client-side/SPA applications\n  const shouldRedirect = settings.get('redirect') === 'always';\n  if (shouldRedirect) {\n    const redirectUri = settings.get('redirectUri');\n    if (!redirectUri) {\n      throw new Errors.ConfigError('\"redirectUri\" is required');\n    }\n    const qs = toQueryString({ 'interaction_code': interactionCode, state });\n    window.location.assign(redirectUri + qs);\n    return;\n  }\n  \n  // Return a promise (or call success callback) to client-side apps in remediation mode.\n  if (isRemediationMode) {\n    settings.callGlobalSuccess(Enums.SUCCESS, {\n      'interaction_code': interactionCode,\n      state\n    });\n    return;\n  }\n\n  // Operating in \"relying-party\" mode. The widget owns this transaction.\n  // Complete the transaction client-side and call success/resolve promise\n  if (!transactionMeta) {\n    throw new Errors.ConfigError('Could not load transaction data from storage');\n  }\n  const { codeVerifier } = transactionMeta;\n  return authClient.token.exchangeCodeForTokens({ codeVerifier, interactionCode })\n    .then(({ tokens }) => {\n      settings.callGlobalSuccess(Enums.SUCCESS, { tokens });\n    })\n    .catch(err => {\n      settings.callGlobalError(err);\n    })\n    .finally(() => {\n      // clear all meta related to this transaction\n      authClient.idx.clearTransactionMeta();\n    });\n}\n"],"names":["interactionCodeFlow","settings","idxResponse","interactionCode","authClient","getAuthClient","transactionMeta","idx","getSavedTransactionMeta","state","options","isRemediationMode","get","clearTransactionMeta","shouldRedirect","redirectUri","Errors","ConfigError","qs","toQueryString","window","location","assign","callGlobalSuccess","Enums","SUCCESS","codeVerifier","token","exchangeCodeForTokens","then","tokens","catch","err","callGlobalError","finally"],"mappings":"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"}