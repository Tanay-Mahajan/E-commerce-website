{"version":3,"file":"IdentifierView.js","sources":["../../../../../../src/v2/view-builder/views/IdentifierView.js"],"sourcesContent":["import { loc } from 'okta';\nimport { FORMS as RemediationForms } from '../../ion/RemediationConstants';\nimport { BaseForm, BaseView, createIdpButtons, createCustomButtons } from '../internals';\nimport DeviceFingerprinting from '../utils/DeviceFingerprinting';\nimport IdentifierFooter from '../components/IdentifierFooter';\nimport Link from '../components/Link';\nimport signInWithIdps from './signin/SignInWithIdps';\nimport customButtonsView from './signin/CustomButtons';\nimport signInWithDeviceOption from './signin/SignInWithDeviceOption';\nimport { isCustomizedI18nKey } from '../../ion/i18nTransformer';\nimport { getForgotPasswordLink } from '../utils/LinksUtil';\nimport CookieUtil from 'util/CookieUtil';\n\nconst Body = BaseForm.extend({\n\n  title() {\n    return loc('primaryauth.title', 'login');\n  },\n\n  save() {\n    return loc('oform.next', 'login');\n  },\n\n  initialize() {\n    BaseForm.prototype.initialize.apply(this, arguments);\n\n    const uiSchema = this.getUISchema();\n    if (uiSchema.find(schema => schema.name === 'credentials.passcode')) {\n      this.save = loc('oie.primaryauth.submit', 'login');\n    }\n\n    // Precedence for pre-filling identifier field:\n    // 1. Use username/identifier from the config.\n    // 2. Use identifier value returned in remediation response (model will have this attr set if it's there) \n    // 3. Use value from the \"remember my username\" cookie.\n    if(this._shouldAddUsername(uiSchema)) {\n      // Set username/identifier from the config (i.e. config.username)\n      this.model.set('identifier', this.settings.get('username'));\n    } else if (!this.model.get('identifier') && this._shouldApplyRememberMyUsername(uiSchema)) {\n      // Use value from cookie if the remediation did not return identifier value.\n      this._applyRememberMyUsername();\n    }\n  },\n\n  saveForm() {\n    // Ideally this can be added to a \"preSaveForm\" handler - but keeping this here for now.\n    if (!this.settings.get('features.deviceFingerprinting')) {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n      return;\n    }\n\n    // Before the XHR is made for \"identify\", we'll generate this one-time use fingerprint via\n    // a hidden-iframe (similar to authn/v1 flows)\n    const fingerprintData = {\n      oktaDomainUrl: this.settings.get('baseUrl'),\n      element: this.$el,\n    };\n\n    // For certain flows, we need to generate a device fingerprint\n    // to determine if we need to send a \"New Device Sign-on Notification\".\n    // In the future, this should be handled completely by okta-auth-js OKTA-418160\n    DeviceFingerprinting.generateDeviceFingerprint(fingerprintData)\n      .then(fingerprint => {\n        this.options.appState.set('deviceFingerprint', fingerprint);\n      })\n      .catch(() => { /* Keep going even if device fingerprint fails */ })\n      .finally(() => {\n        BaseForm.prototype.saveForm.apply(this, arguments);\n      });\n  },\n\n  render() {\n    BaseForm.prototype.render.apply(this, arguments);\n\n    // Launch Device Authenticator\n    if (this.options.appState.hasRemediationObject(RemediationForms.LAUNCH_AUTHENTICATOR)) {\n      this.add(signInWithDeviceOption, '.o-form-fieldset-container', false, true, { isRequired: false });\n    }\n\n    // add forgot password link and external idps buttons if needed\n    const idpButtons = createIdpButtons(this.options);\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      // Add the forgot password link before the buttons for multiple IDPs\n      this._addForgotPasswordView();\n      this._addIdpView(idpButtons);\n    }\n\n    const customButtons = createCustomButtons(this.options.settings);\n    if (Array.isArray(customButtons) && customButtons.length) {\n      this.add(customButtonsView, {\n        selector: '.o-form-button-bar',\n        options: {\n          customButtons,\n          addSeparateLine: true,\n        }\n      });\n    }\n  },\n\n  postRender() {\n    BaseForm.prototype.postRender.apply(this, arguments);\n    // When a user enters invalid credentials, /introspect returns an error,\n    // along with a user object containing the identifier entered by the user.\n    this.$el.find('.identifier-container').remove();\n  },\n\n  /**\n   * Update UI schemas for customization from .widgetrc.js or Admin Customization settings page.\n   * @returns Array\n   */\n  getUISchema() {\n    const schemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n\n    const { settings } = this.options;\n    const identifierExplainLabeli18nKey = 'primaryauth.username.tooltip';\n    const passwordExplainLabeli18nKey = 'primaryauth.password.tooltip';\n\n    let newSchemas = schemas.map(schema => {\n      let newSchema = { ...schema };\n\n      if (schema.name === 'identifier') {\n        if (isCustomizedI18nKey(identifierExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(identifierExplainLabeli18nKey, 'login'),\n            'explain-top': true,\n          };\n        }\n\n        // We enable the browser's autocomplete for the identifier input\n        // because we want to allow the user to choose from previously used identifiers.\n        newSchema = {\n          ...newSchema,\n          autoComplete: 'identifier'\n        };\n      } else if (schema.name === 'credentials.passcode') {\n        newSchema = {\n          ...newSchema,\n          autoComplete: 'current-password'\n        };\n\n        if (isCustomizedI18nKey(passwordExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(passwordExplainLabeli18nKey, 'login'),\n            'explain-top': true,\n          };\n        }\n      }\n\n      return newSchema;\n    });\n\n    // If showKeepMeSignedIn is explicitly set to false, we ensure we don't display\n    // the \"Keep me signed in\" checkbox\n    if (this.settings.get('features.showKeepMeSignedIn') === false) {\n      newSchemas = newSchemas.filter(schema => schema.name !== 'rememberMe');\n    }\n\n    return newSchemas;\n  },\n\n  _addForgotPasswordView() {\n    const forgotPasswordLink = getForgotPasswordLink(this.options.appState, this.options.settings);\n    if (forgotPasswordLink.length) {\n      this.add('<div class=\"links-primary\"></div>', { selector: '.o-form-button-bar' });\n      this.add(Link, {\n        selector: '.links-primary',\n        options: forgotPasswordLink[0],\n      });\n    }\n  },\n\n  _addIdpView(idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons \n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons,\n        isPrimaryIdpDisplay\n      }\n    });\n  },\n\n  _shouldAddUsername(uiSchema) {\n    // We pre-populate the identifier/username field only if we're in an identifier\n    // form and if the option is passed in.\n    return (uiSchema.find(schema => schema.name === 'identifier') && this.settings.get('username'));\n  }, \n   \n  _shouldApplyRememberMyUsername(uiSchema) {\n    return (uiSchema.find(schema => schema.name === 'identifier') \n        && this.settings.get('features.rememberMe')\n        && this.settings.get('features.rememberMyUsernameOnOIE'));\n  },\n\n  /**\n   * When \"Remember My Username\" is enabled, we pre-fill the identifier\n   * field with the saved userName cookie. The cookie would have been originally\n   * saved when submitting the form previously.\n   */\n  _applyRememberMyUsername() {\n    const cookieUsername = CookieUtil.getCookieUsername();\n    if (cookieUsername) {\n      this.model.set('identifier', cookieUsername);\n    }\n  }\n});\n\nexport default BaseView.extend({\n  Body,\n\n  createModelClass() {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n    \n    // customize pre-submit form validation inline error messages\n    const identifierRequiredi18nKey = 'error.username.required';\n    const passwordRequiredi18nKey = 'error.password.required';\n    const props = ModelClass.prototype.props;\n    const validate = (attr) => {\n      const inlineErrors = {};\n      const isEmptyIdentifier = props['identifier'] && !attr?.['identifier'];\n      const isEmptyPassword = props['credentials.passcode'] && !attr?.['credentials.passcode'];\n      if (isEmptyIdentifier && isCustomizedI18nKey(identifierRequiredi18nKey, this.settings)) {\n        inlineErrors['identifier'] = loc(identifierRequiredi18nKey, 'login');\n      }\n      if (isEmptyPassword && isCustomizedI18nKey(passwordRequiredi18nKey, this.settings)) {\n        inlineErrors['credentials.passcode'] = loc(passwordRequiredi18nKey, 'login');\n      }\n      return inlineErrors;\n    };\n\n    return ModelClass.extend({\n      validate\n    });\n  },\n\n  initialize() {\n    // Override Footer by overriding showForgotPasswordLink method\n    this.Footer = IdentifierFooter.extend({\n      showForgotPasswordLink: () => {\n        // We don't add the forgot password link in the footer if SIW renders multi IDPs,\n        // instead in that case we add it before the IDP buttons in IdentifierView as primary links.\n        const idpButtons = createIdpButtons(this.options);\n        return (!this.options.appState.isIdentifierOnlyView() &&\n          (!Array.isArray(idpButtons) || idpButtons.length === 0));\n      }\n    });\n  },\n\n  postRender() {\n    BaseView.prototype.postRender.apply(this, arguments);\n\n    // If user entered identifier is not found, API sends back a message with a link to sign up\n    // This is the click handler for that link\n    const appState = this.options.appState;\n    this.$el.find('.js-sign-up').click(function() {\n      appState.trigger('invokeAction', RemediationForms.SELECT_ENROLL_PROFILE);\n      return false;\n    });\n  },\n});\n"],"names":["Body","BaseForm","extend","title","loc","save","initialize","prototype","apply","arguments","uiSchema","getUISchema","find","schema","name","_shouldAddUsername","model","set","settings","get","_shouldApplyRememberMyUsername","_applyRememberMyUsername","saveForm","fingerprintData","oktaDomainUrl","element","$el","DeviceFingerprinting","generateDeviceFingerprint","then","fingerprint","options","appState","catch","finally","render","hasRemediationObject","RemediationForms","LAUNCH_AUTHENTICATOR","add","signInWithDeviceOption","isRequired","idpButtons","createIdpButtons","Array","isArray","length","_addForgotPasswordView","_addIdpView","customButtons","createCustomButtons","customButtonsView","selector","addSeparateLine","postRender","remove","schemas","identifierExplainLabeli18nKey","passwordExplainLabeli18nKey","newSchemas","map","newSchema","isCustomizedI18nKey","explain","autoComplete","filter","forgotPasswordLink","getForgotPasswordLink","Link","idpDisplay","isPrimaryIdpDisplay","toUpperCase","signInWithIdps","prepend","cookieUsername","CookieUtil","getCookieUsername","BaseView","createModelClass","ModelClass","identifierRequiredi18nKey","passwordRequiredi18nKey","props","validate","attr","inlineErrors","isEmptyIdentifier","isEmptyPassword","Footer","IdentifierFooter","showForgotPasswordLink","isIdentifierOnlyView","click","trigger","SELECT_ENROLL_PROFILE"],"mappings":"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"}